@import '~@angular/material/theming';

// ng-theme
@mixin ng-popover-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .ng-popover .popover-button {
    background: mat-color($background, 'card');
  }

  .popover-layout-pane {
    background-color: mat-color($background, 'card');
  }
}

@include mat-core();
@import 'middleware/ch.theme.scss';

// Define a mixin that accepts a theme and outputs the theme-specific styles.
@mixin mat-sidenav-theme-custom($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $background: map-get($theme, background);

  // Define any styles affected by the theme.
  .mat-sidenav-content {
    &::-webkit-scrollbar-thumb {
      background-color: mat-color($primary);
    }
  }
}

@mixin mat-list-theme-custom($theme) {
  $primary: map-get($theme, primary);

  .mat-list-item {
    i {
      background-color: mat-color($primary);
    }
  }
}

@mixin angular-material-theme-custom($theme) {
  @include mat-sidenav-theme-custom($theme);
  @include mat-list-theme-custom($theme);
}

@import './theme/indigo-pink.theme.scss';
@import './theme/deeppurple-amber.theme.scss';
@import './theme/purple-green.theme.scss';
@import './theme/pink-bluegrey.theme.scss';
